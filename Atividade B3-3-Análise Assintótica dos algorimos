/*------------------------------------------------------------------------*/
/*   FATEC-São Caetano do Sul                 Estrutura de Dados          */
/*                          Apollo Henrique Moreira                       */
/*             Objetivo: Busca Binária                                    */
/*             Paradigama: - programação Estruturada                      */
/*                                                                        */
/*                                                         Data:09/09/2024*/
/*-------------------------------------------------------------------------*/

// busca linear linguagem C
#include <stdio.h>

int busca_linear(int arr[], int n, int alvo) {
    for (int i = 0; i < n; i++) {
        if (arr[i] == alvo) {
            return i; 
        }
    }
    return -1;
}




// busca linear em ordem linguagem C
int busca_linear_ordenada(int arr[], int n, int alvo) {
    for (int i = 0; i < n; i++) {
        if (arr[i] > alvo) {
            return -1; // A lista está ordenada, então se encontramos um elemento maior, o alvo não está na lista
        }
        if (arr[i] == alvo) {
            return i; // Elemento encontrado
        }
    }
    return -1; // Elemento não encontrado
}



// busca binária linguagem C
int busca_binaria(int arr[], int n, int alvo) {
    int esquerda = 0;
    int direita = n - 1;
    
    while (esquerda <= direita) {
        int meio = esquerda + (direita - esquerda) / 2;
        
        if (arr[meio] == alvo) {
            return meio; // Elemento encontrado
        }
        if (arr[meio] < alvo) {
            esquerda = meio + 1;
        } else {
            direita = meio - 1;
        }
    }
    return -1; // Elemento não encontrado
}


```python
import matplotlib.pyplot as plt
import numpy as np

# Tamanhos das entradas
n = np.arange(1, 1000, 10)

# Tempo de execução
tempo_linear = n
tempo_binario = np.log2(n)

plt.figure(figsize=(10, 6))

# Gráficos
plt.plot(n, tempo_linear, label='Busca Linear', color='blue')
plt.plot(n, tempo_binario, label='Busca Binária', color='red')
plt.xlabel('Tamanho da Entrada (n)')
plt.ylabel('Tempo de Execução')
plt.title('Comparação de Algoritmos de Busca')
plt.legend()
plt.grid(True)
plt.show()
